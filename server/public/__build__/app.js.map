{"version":3,"sources":["webpack:///./client/app/bootstrap.ts","webpack:///./client/app/app.ts"],"names":["XLarge","XLarge.constructor","App","App.constructor"],"mappings":";;;;;AAGA,sCAAiE,GAAmB,CAAC;AACrF,oCAA+B,GAAiB,CAAC;AACjD,kCAA6B,GAAe,CAAC;AAM7C,iCAAkB,GAAO,CAAC;AAM1B,qBAAS,CAAC,SAAG,EAAE;KAEb,yBAAc;KACd,yBAAgB;KAChB,qBAAc;KACd,kCAAuB;EACxB,CAAC,CAAC;;;;;;;;;;;;;;;;;ACpBH,sCAAyD,GAAmB,CAAC;AAE7E,kCAA4B,GAAe,CAAC;AAK5C,oCAAgC,GAAiB,CAAC;AAMlD;KAIEA,gBAAYA,OAAmBA,EAAEA,QAAkBA;SAMjDC,QAAQA,CAACA,eAAeA,CAACA,OAAOA,EAAEA,UAAUA,EAAEA,SAASA,CAACA,CAACA;KAC3DA,CAACA;KAXHD;SAACA,oBAASA,CAACA;aACTA,QAAQA,EAAEA,WAAWA;UACtBA,CAACA;;gBAUDA;KAADA,aAACA;AAADA,EAACA,IAAA;AATY,eAAM,SASlB;AAMD;KAiDEE,aAAmBA,IAAUA;SAAVC,SAAIA,GAAJA,IAAIA,CAAMA;SAC3BA,IAAIA,CAACA,KAAKA,GAAGA,WAAWA,CAACA;KAC3BA,CAACA;KAnDHD;SAACA,oBAASA,CAACA;aAITA,QAAQA,EAAEA,KAAKA;aAGfA,UAAUA,EAAEA,CAAEA,0BAAiBA,EAAEA,MAAMA,CAAEA;aAEzCA,MAAMA,EAAEA,CAACA,qHAORA,CAACA;aAEFA,QAAQA,EAAEA,0mBAwBTA;UACFA,CAACA;;aAcDA;KAADA,UAACA;AAADA,EAACA,IAAA;AAbY,YAAG,MAaf","file":"app.js","sourcesContent":["/*\n * Providers provided by Angular\n */\nimport {bootstrap, FORM_PROVIDERS, ELEMENT_PROBE_PROVIDERS} from 'angular2/angular2';\nimport {ROUTER_PROVIDERS} from 'angular2/router';\nimport {HTTP_PROVIDERS} from 'angular2/http';\n\n/*\n * App Component\n * our top level component that holds all of our components\n */\nimport {App} from './app';\n\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\nbootstrap(App, [\n  // These are dependencies of our App\n  FORM_PROVIDERS,\n  ROUTER_PROVIDERS,\n  HTTP_PROVIDERS,\n  ELEMENT_PROBE_PROVIDERS\n]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/bootstrap.ts\n **/","/*\n * Angular 2 decorators and services\n */\nimport {Directive, Component, ElementRef, Renderer} from 'angular2/angular2';\nimport {RouteConfig, Router} from 'angular2/router';\nimport {Http, Headers} from 'angular2/http';\n\n/*\n * Angular Directives\n */\nimport {ROUTER_DIRECTIVES} from 'angular2/router';\n\n/*\n * Directive\n * XLarge is a simple directive to show how one is made\n */\n@Directive({\n  selector: '[x-large]' // using [ ] means selecting attributes\n})\nexport class XLarge {\n  constructor(element: ElementRef, renderer: Renderer) {\n    // simple DOM manipulation to set font size to x-large\n    // `nativeElement` is the direct reference to the DOM element\n    // element.nativeElement.style.fontSize = 'x-large';\n\n    // for server/webworker support use the renderer\n    renderer.setElementStyle(element, 'fontSize', 'x-large');\n  }\n}\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'app'\n  selector: 'app', // <app></app>\n  // We need to tell Angular's compiler which directives are in our template.\n  // Doing so will allow Angular to attach our behavior to an element\n  directives: [ ROUTER_DIRECTIVES, XLarge ],\n  // Our list of styles in our component. We may add more to compose many styles together\n  styles: [`\n    .title {\n      font-family: Arial, Helvetica, sans-serif;\n    }\n    main {\n      padding: 1em;\n    }\n  `],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  template: `\n  <header>\n    <h1 class=\"title\">Hello {{ title }}</h1>\n  </header>\n\n  <main>\n    Your Content Here\n    <div>\n\n      <input type=\"text\" [value]=\"title\" (input)=\"title = $event.target.value\" autofocus>\n      <!--\n        Rather than wiring up two-way data-binding ourselves\n        we can use Angular's [(ngModel)] syntax\n        <input type=\"text\" [(ngModel)]=\"title\">\n      -->\n    </div>\n\n    <pre>this.title = {{ title | json }}</pre>\n\n  </main>\n\n  <footer x-large>\n    WebPack Angular 2 Starter by <a href=\"https://twitter.com/AngularClass\">@AngularClass</a>\n  </footer>\n  `\n})\nexport class App {\n  // These are member type\n  title: string;\n\n  // TypeScript public modifiers\n  constructor(public http: Http) {\n    this.title = 'Angular 2';\n  }\n\n  // ngOnInit() {\n  //\n  // }\n\n}\n\n/*\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\n * more angular app examples that you may copy/paste\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\n * For help or questions please contact us at @AngularClass on twitter\n * or our chat on Slack at https://AngularClass.com/slack-join\n * or via chat on Gitter at https://gitter.im/AngularClass/angular2-webpack-starter\n */\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/app.ts\n **/"],"sourceRoot":""}